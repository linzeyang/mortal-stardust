"""Solution models for AI-generated guidance and user feedback management.

This module defines all models related to AI-generated solutions that respond to
user experiences. Solutions are created through a three-stage processing pipeline
that provides psychological healing, practical recommendations, and follow-up support.

The solution system includes comprehensive user feedback mechanisms, analytics tracking,
and resource recommendations to ensure effective guidance delivery and continuous
improvement of AI responses.
"""

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class ProcessingStage(int, Enum):
    """AI processing stages for solution generation and user support.

    Represents the three-stage AI processing pipeline that provides comprehensive
    support for user experiences. Each stage has specific objectives and generates
    different types of solutions tailored to user needs at different points in
    their journey.

    Values:
        STAGE1 (1): Psychological Healing and Emotional Support.
            Focuses on empathy, validation, and emotional processing.
            Provides therapeutic responses and emotional regulation guidance.
        STAGE2 (2): Practical Solutions and Action Planning.
            Generates specific recommendations and actionable steps.
            Emphasizes problem-solving and concrete implementation strategies.
        STAGE3 (3): Follow-up Support and Progress Tracking.
            Offers ongoing guidance and experience supplementation.
            Focuses on progress monitoring and adaptive support.
    """

    STAGE1 = 1  # Psychological Healing
    STAGE2 = 2  # Practical Solutions
    STAGE3 = 3  # Follow-up Support


class ResourceType(str, Enum):
    """Types of external resources recommended in AI solutions.

    Categorizes different types of resources that can be recommended to users
    as part of AI-generated solutions. Each type serves different learning
    styles and engagement preferences for comprehensive support.

    Values:
        ARTICLE: Written articles, blog posts, or online content.
            Provides in-depth information and detailed explanations.
        BOOK: Published books, e-books, or comprehensive written resources.
            Offers structured, comprehensive knowledge on specific topics.
        VIDEO: Video content, tutorials, or visual learning materials.
            Supports visual learners and provides demonstration-based guidance.
        PODCAST: Audio content, interviews, or discussion-based resources.
            Enables learning during commutes or multitasking activities.
        PROFESSIONAL: Professional services, therapy, or expert consultation.
            Connects users with human experts for specialized support.
    """

    ARTICLE = "article"
    BOOK = "book"
    VIDEO = "video"
    PODCAST = "podcast"
    PROFESSIONAL = "professional"


class SolutionStatus(str, Enum):
    """Solution lifecycle status for tracking and quality management.

    Represents the current state of a solution in its lifecycle from generation
    through user interaction to completion. Status transitions help manage
    quality control, user experience, and system optimization.

    Values:
        PROCESSING: Solution is currently being generated by AI.
            Initial state during active AI processing and content generation.
        GENERATED: Solution has been created but not yet reviewed.
            AI processing complete, awaiting quality review or user interaction.
        REVIEWED: Solution has undergone quality review process.
            Content has been validated for appropriateness and accuracy.
        APPROVED: Solution has been approved for user delivery.
            Quality-assured content ready for user consumption and feedback.
        REGENERATING: Solution is being recreated due to user feedback.
            AI is generating new content based on user improvement requests.
        ARCHIVED: Solution has been archived but preserved for reference.
            No longer active but maintained for historical analysis.
        COMPLETED: Solution lifecycle is complete with user satisfaction.
            User has indicated successful resolution and no further action needed.
    """

    PROCESSING = "processing"
    GENERATED = "generated"
    REVIEWED = "reviewed"
    APPROVED = "approved"
    REGENERATING = "regenerating"
    ARCHIVED = "archived"
    COMPLETED = "completed"


class UserRating(int, Enum):
    """User rating scale for solution effectiveness and satisfaction.

    Quantifies user satisfaction with AI-generated solutions using a structured
    scale that enables analytics and AI improvement. Values are designed to
    provide clear differentiation while being intuitive for users.

    Values:
        POOR (30): Solution was unhelpful or inappropriate.
            Indicates significant issues requiring solution regeneration.
        FAIR (50): Solution was somewhat helpful but had limitations.
            Suggests room for improvement in relevance or quality.
        GOOD (70): Solution was helpful and met most user needs.
            Indicates satisfactory performance with minor improvement opportunities.
        EXCELLENT (100): Solution was highly effective and exceeded expectations.
            Represents optimal AI performance and user satisfaction.
    """

    POOR = 30
    FAIR = 50
    GOOD = 70
    EXCELLENT = 100


class Resource(BaseModel):
    """External resource recommendation for additional user support.

    Represents curated resources that complement AI-generated solutions by
    providing additional learning materials, professional services, or
    specialized content to support user growth and problem resolution.

    Attributes:
        type: Category of resource for appropriate presentation and usage.
            Determines how the resource is displayed and accessed by users.
        title: Human-readable title of the resource for identification.
            Used in user interface display and resource selection.
        url: Optional web link to access the resource online.
            None for resources that don't have direct web access.
        description: Optional detailed description of resource content and value.
            Helps users understand relevance and decide whether to engage.
    """

    type: ResourceType
    title: str
    url: Optional[str] = None
    description: Optional[str] = None


class SolutionContent(BaseModel):
    """Core content of AI-generated solutions with structured guidance.

    Contains the actual AI-generated guidance content structured for optimal
    user consumption and action-taking. All sensitive content is encrypted
    to protect user privacy while maintaining solution effectiveness.

    Attributes:
        title: Solution title summarizing the main guidance theme (encrypted).
            Provides quick identification and overview of solution focus.
        description: Detailed explanation of the situation and guidance (encrypted).
            Main content providing context, analysis, and supportive guidance.
        recommendations: List of specific recommendations for user action (encrypted).
            Default: Empty list, populated with actionable suggestions.
        actionSteps: Optional structured action plan with specific steps (encrypted).
            Provides clear, sequential guidance for solution implementation.
        resources: Optional list of external resources for additional support.
            Curated materials to supplement AI guidance with expert content.
    """

    title: str  # Encrypted
    description: str  # Encrypted
    recommendations: List[str] = []  # Encrypted
    actionSteps: Optional[List[str]] = None  # Encrypted
    resources: Optional[List[Resource]] = None


class AIMetadata(BaseModel):
    """Metadata about AI processing for solution generation and optimization.

    Captures technical information about how the AI solution was generated,
    including model parameters, processing metrics, and quality indicators.
    Used for system optimization, debugging, and performance analysis.

    Attributes:
        model: AI model identifier used for solution generation.
            Default: "gpt-4" for high-quality response generation.
            Tracks which model version generated the solution.
        prompt: Complete prompt sent to AI model for solution generation (encrypted).
            Preserved for debugging, regeneration, and prompt optimization.
        parameters: AI model parameters used during generation (encrypted).
            Includes temperature, max_tokens, and other generation settings.
        processingTime: Time in seconds required for AI solution generation.
            Used for performance monitoring and system optimization.
        confidence: AI confidence score in solution quality (0.0 to 1.0).
            Validation: Must be between 0.0 and 1.0 inclusive.
            Higher values indicate greater AI confidence in solution appropriateness.
        version: Solution generation system version for compatibility tracking.
            Default: "1.0", used for system updates and compatibility management.
    """

    model: str = "gpt-4"
    prompt: str  # Encrypted
    parameters: Dict[str, Any] = {}  # Encrypted
    processingTime: float
    confidence: float = Field(..., ge=0.0, le=1.0)
    version: str = "1.0"


class UserFeedback(BaseModel):
    """User feedback on solution effectiveness for AI improvement.

    Captures comprehensive user feedback about AI-generated solutions to enable
    continuous improvement of AI responses and personalization. Feedback is used
    for both immediate solution refinement and long-term system optimization.

    Attributes:
        rating: User's overall satisfaction rating using structured scale.
            Quantifies solution effectiveness for analytics and improvement.
        isHelpful: Boolean indicator of solution helpfulness.
            Default: False, requires explicit user confirmation of value.
            Simple metric for quick feedback collection and effectiveness tracking.
        improvementSuggestions: Optional detailed suggestions for solution enhancement (encrypted).
            User-provided feedback on how the solution could be improved.
            Encrypted to protect user privacy while enabling AI learning.
        positiveAspects: Optional list of solution elements user found valuable (encrypted).
            Highlights successful aspects for reinforcement in future solutions.
            Encrypted to protect user privacy while preserving learning insights.
        ratedAt: Timestamp when feedback was provided.
            Default: Current UTC time when feedback is submitted.
            Used for temporal analysis of feedback patterns and user engagement.
    """

    rating: UserRating
    isHelpful: bool = False
    improvementSuggestions: Optional[str] = None  # Encrypted
    positiveAspects: Optional[List[str]] = None  # Encrypted
    ratedAt: datetime = Field(default_factory=datetime.utcnow)


class SolutionAnalytics(BaseModel):
    """Analytics data for solution performance and engagement tracking.

    Tracks solution usage patterns and effectiveness metrics to understand
    user engagement and solution impact. Used for system optimization and
    user experience improvement without compromising privacy.

    Attributes:
        viewCount: Number of times solution has been viewed by user.
            Default: 0, incremented on each solution access.
            Indicates user engagement and solution relevance.
        shareCount: Number of times solution has been shared (if enabled).
            Default: 0, tracks social engagement and solution value.
            Used for understanding viral content and community value.
        effectivenessScore: Calculated effectiveness based on user feedback.
            Optional computed score combining ratings and engagement metrics.
            Used for solution ranking and AI model optimization.
    """

    viewCount: int = 0
    shareCount: int = 0
    effectivenessScore: Optional[float] = None


class FollowUp(BaseModel):
    """Follow-up scheduling and tracking for ongoing user support.

    Manages scheduled follow-up interactions to provide continued support
    and track user progress after initial solution delivery. Enables
    Stage 3 processing and long-term user relationship management.

    Attributes:
        scheduledDate: When follow-up interaction should occur.
            Set based on solution type and user preferences.
            Used for automated follow-up scheduling and user engagement.
        completed: Whether scheduled follow-up has been completed.
            Default: False, set to True after follow-up interaction.
            Tracks follow-up completion for user experience management.
        notes: Optional notes about follow-up interaction or user progress (encrypted).
            Records follow-up outcomes and user progress observations.
            Encrypted to protect user privacy while enabling continuity of care.
    """

    scheduledDate: datetime
    completed: bool = False
    notes: Optional[str] = None  # Encrypted


class SolutionCreate(BaseModel):
    """Request model for creating new AI-generated solutions.

    Validates and structures data required for creating a new solution in response
    to a user experience. Links solutions to specific experiences and processing
    stages while capturing AI generation metadata for quality tracking.

    Attributes:
        experienceId: ID of the experience this solution addresses.
            Links solution to specific user experience for context and organization.
            Used for experience-solution relationship management and user interface.
        stage: Processing stage this solution represents in the AI pipeline.
            Determines solution type, content focus, and user expectations.
            Critical for proper solution categorization and user experience flow.
        content: Complete AI-generated solution content with structured guidance.
            Contains the actual guidance, recommendations, and resources.
        aiMetadata: Technical metadata about AI processing and generation.
            Captures model information, processing metrics, and quality indicators.
    """

    experienceId: str
    stage: ProcessingStage
    content: SolutionContent
    aiMetadata: AIMetadata


class SolutionUpdate(BaseModel):
    """Request model for updating existing solutions.

    Allows partial updates to solution information including content modifications,
    user feedback integration, status changes, and follow-up scheduling. All
    fields are optional to support granular updates and different update scenarios.

    Attributes:
        content: Updated solution content for regeneration or refinement.
            Can modify guidance, recommendations, or resources based on feedback.
        userFeedback: User feedback on solution effectiveness and quality.
            Captures user ratings, helpfulness indicators, and improvement suggestions.
        status: Updated solution status for lifecycle management.
            Tracks solution progress through review, approval, and completion stages.
        followUp: Follow-up scheduling and tracking information.
            Manages ongoing user support and progress monitoring.
    """

    content: Optional[SolutionContent] = None
    userFeedback: Optional[UserFeedback] = None
    status: Optional[SolutionStatus] = None
    followUp: Optional[FollowUp] = None


class SolutionResponse(BaseModel):
    """Response model for solution data in API endpoints.

    Structures solution data for safe transmission to client applications,
    including all necessary information for user interface rendering and
    solution management while maintaining proper data formatting.

    Attributes:
        id: Solution unique identifier from MongoDB ObjectId.
            Aliased from "_id" to match MongoDB document structure.
            Used for all solution-related operations and user interactions.
        userId: Owner's user ID for access control and data organization.
            Links solution to specific user account for privacy and security.
        experienceId: ID of the experience this solution addresses.
            Maintains experience-solution relationship for user interface context.
        stage: Processing stage this solution represents in AI pipeline.
            Indicates solution type and position in user support journey.
        content: Complete solution content with decrypted guidance.
            AI-generated recommendations, action steps, and resources for user.
        aiMetadata: Technical metadata about AI processing and generation.
            Model information, processing metrics, and quality indicators.
        userFeedback: Optional user feedback on solution effectiveness.
            Ratings, helpfulness indicators, and improvement suggestions.
        status: Current solution status in lifecycle management.
            Tracks solution progress through generation, review, and completion.
        analytics: Solution performance and engagement metrics.
            View counts, sharing data, and effectiveness scores.
        followUp: Optional follow-up scheduling and tracking information.
            Manages ongoing user support and progress monitoring.
        createdAt: Solution creation timestamp in ISO format.
            Used for chronological sorting and solution timeline display.
        updatedAt: Last modification timestamp in ISO format.
            Tracks when solution content or metadata was last modified.
    """

    id: str = Field(..., alias="_id")
    userId: str
    experienceId: str
    stage: ProcessingStage
    content: SolutionContent
    aiMetadata: AIMetadata
    userFeedback: Optional[UserFeedback] = None
    status: SolutionStatus
    analytics: SolutionAnalytics
    followUp: Optional[FollowUp] = None
    createdAt: datetime
    updatedAt: datetime

    class Config:
        populate_by_name = True
        json_encoders = {datetime: lambda v: v.isoformat()}


class SolutionInDB(BaseModel):
    """Solution model for database storage with encryption and full metadata.

    Represents the complete solution record as stored in the database,
    including encrypted sensitive content and comprehensive metadata for
    AI processing optimization and user management. Used only for database operations.

    Attributes:
        id: MongoDB ObjectId as string, None for new solutions before insertion.
            Aliased from "_id" to match MongoDB document structure.
            Primary key for database operations and foreign key references.
        userId: Owner's user ID for data organization and access control.
            Indexed for efficient user-specific queries and privacy enforcement.
        experienceId: ID of the experience this solution addresses.
            Foreign key maintaining experience-solution relationship integrity.
        stage: Processing stage this solution represents in AI pipeline.
            Determines solution categorization and user experience flow.
        content: Complete solution content with encrypted sensitive data.
            AI-generated guidance with encrypted text while preserving structure.
        aiMetadata: Technical metadata with encrypted prompt and parameters.
            Processing information with sensitive data encrypted for security.
        userFeedback: Optional user feedback with encrypted detailed comments.
            Ratings and helpfulness in plain text, detailed feedback encrypted.
        status: Current solution status for lifecycle management.
            Default: GENERATED for newly created solutions.
            Tracks solution progress through quality control and user interaction.
        analytics: Solution performance metrics for engagement tracking.
            Default: Empty analytics object, populated as user interacts.
        followUp: Optional follow-up scheduling with encrypted notes.
            Manages ongoing support with encrypted progress observations.
        createdAt: Solution creation timestamp, set automatically.
            Used for chronological ordering and analytics.
        updatedAt: Last modification timestamp, updated on changes.
            Tracks when solution content, feedback, or status was modified.
    """

    id: Optional[str] = Field(None, alias="_id")
    userId: str
    experienceId: str
    stage: ProcessingStage
    content: SolutionContent
    aiMetadata: AIMetadata
    userFeedback: Optional[UserFeedback] = None
    status: SolutionStatus = SolutionStatus.GENERATED
    analytics: SolutionAnalytics = SolutionAnalytics()
    followUp: Optional[FollowUp] = None
    createdAt: datetime = Field(default_factory=datetime.utcnow)
    updatedAt: datetime = Field(default_factory=datetime.utcnow)

    class Config:
        populate_by_name = True


class RateSolutionRequest(BaseModel):
    """Request model for user rating and feedback submission.

    Validates user feedback data for solution rating and improvement suggestions.
    Provides structured format for collecting user satisfaction metrics and
    qualitative feedback to improve AI solution generation.

    Attributes:
        rating: User's overall satisfaction rating using structured scale.
            Quantifies solution effectiveness for analytics and AI improvement.
        isHelpful: Boolean indicator of solution helpfulness.
            Default: False, requires explicit user confirmation of value.
            Simple metric for quick feedback collection and effectiveness tracking.
        improvementSuggestions: Optional detailed suggestions for enhancement.
            User-provided feedback on how the solution could be improved.
            Used for AI model training and solution generation optimization.
        positiveAspects: Optional list of solution elements user found valuable.
            Highlights successful aspects for reinforcement in future solutions.
            Used to identify effective patterns in AI solution generation.
    """

    rating: UserRating
    isHelpful: bool = False
    improvementSuggestions: Optional[str] = None
    positiveAspects: Optional[List[str]] = None
